name: Continuous integration
on: push

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  DOCKER_IMAGE_NAME: rails-app
  DEPLOY_USER: deploy
  HOST: 54.174.219.87

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        ports: ["5432:5432"]
        env:
          POSTGRES_PASSWORD: postgres

      redis:
        image: redis:alpine
        ports: ["6379:6379"]

      opensearch:
        image: opensearchproject/opensearch:latest
        ports: ["9200:9200"]
        env:
          discovery.type: single-node
          DISABLE_SECURITY_PLUGIN: true

    env:
      RUBY_YJIT_ENABLE: 1

    steps:
      - uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Lint with RuboCop
        run: bundle exec rubocop --parallel

      - name: Setup Node.js
        uses: actions/setup-node@v4.0.2
        with:
          cache: yarn

      - name: Install Node modules
        run: bin/yarn install --frozen-lockfile

      - name: Run ESLint
        run: bin/yarn lint

      - name: Run Tests
        env:
          DB_HOST: localhost
          DB_USER: postgres
          DB_PASSWORD: postgres
          RAILS_ENV: test
          SECRET_KEY_BASE: we-dont-need-a-secret-here
          APP_ADMIN_EMAIL: admin@example.org
          APP_ADMIN_PASSWORD: secret
          APP_EMAIL: reply@example.org
          APP_HOST: example.org
          AWS_ACCESS_KEY_ID: my-access-key
          AWS_SECRET_ACCESS_KEY: my-secret
          AWS_BUCKET: my-bucket
          AWS_REGION: eu-central-1
          CI: true
          NODE_OPTIONS: '--openssl-legacy-provider'
        run: |
          bundle exec rake assets:precompile
          bundle exec rake db:create db:schema:load
          bundle exec rake spec

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Hiển thị giá trị của một secret
        run: echo "Giá trị của secret là ${{ secrets.DOCKER_USERNAME }}"
      - name: Hiển thị giá trị của một secret
        run: echo "Giá trị của secret là ${{ secrets.DOCKER_PASSWORD }}"

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t rails-app:latest .

      - name: Tag Docker image
        run: docker tag ${{ env.DOCKER_IMAGE_NAME }}:latest ${{ secrets.DOCKER_USER_ID }}/${{ env.DOCKER_IMAGE_NAME }}:latest

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USER_ID }}/${{ env.DOCKER_IMAGE_NAME }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: SSH and Run Docker Image
        env:
          DOCKER_IMAGE_NAME: ${{ env.DOCKER_IMAGE_NAME }}
        run: |
          ssh -o StrictHostKeyChecking=no ${{ env.DEPLOY_USER }}@${{ env.HOST }} << EOF
            cd ./rails-app
            docker pull ${{ secrets.DOCKER_USER_ID }}/${{ env.DOCKER_IMAGE_NAME }}:latest
            docker-compose down app worker
            docker image rm ${{ secrets.DOCKER_USER_ID }}/${{ env.DOCKER_IMAGE_NAME }}:latest -f
            docker-compose up -d
          EOF
